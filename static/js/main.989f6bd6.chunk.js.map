{"version":3,"sources":["components/styled/SearchBar.jsx","components/styled/AppBar.jsx","redux/actionTypes.js","util/request.js","redux/actions/loading.js","redux/actions/code.js","redux/actions/render.js","components/styled/CodeEditor.jsx","components/styled/SystemOutput.jsx","containers/rendering/Tree.jsx","containers/rendering/Struct.jsx","containers/rendering/Variables.jsx","containers/rendering/ComponentRender.jsx","util/util.js","containers/rendering/TreeTab.jsx","containers/rendering/index.jsx","constants/starterCode.js","constants/readme.js","containers/LandingPage.jsx","containers/Home.jsx","redux/reducers/code.js","constants/sampleResponse.js","redux/reducers/response.js","redux/reducers/render.js","redux/reducers/loading.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","icon","color","searchInput","backgroundColor","useStyles","appBar","primary","AppBarWithSearch","props","classes","title","onSearch","AppBar","position","className","Box","mt","mb","ml","Toolbar","Typography","variant","noWrap","defaults","_","chain","map","action","type","strings","module","customActions","concat","fromPairs","str","toUpper","value","parseResponse","response","data","get","has","omit","request","method","query","options","isEmpty","params","baseUrl","console","log","axios","url","timeout","paramsSerializer","qs","stringify","arrayFormat","then","catch","error","updateLoadingState","state","actionTypes","loading","UPDATE","payload","sendCodeToCompile","code","token","sha256","salt","toString","dispatch","post","sendCodeToShare","key","getCodeToShare","NEW","Object","values","join","updateCodeValue","updateRenderState","render","CodeEditor","this","onChange","activeLine","readOnly","markers","push","startRow","endRow","mode","width","name","editorProps","$blockScrolling","React","Component","withStyles","titleStyles","borderTop","borderBottom","grey","overflow","titleBoxBorder","outputTerminal","height","spacing","SystemOutput","output","output_lines_array","split","error_msg","align","output_lines","line","index","style","maxWidth","marginTop","Paper","square","p","GRAPH_ATTRIBUTES","MyFuckingTree","foreignObjectProps","x","translate","y","orientation","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","fill","r","border","textAlign","marginBottom","children","onClick","__rd3t","collapsed","renderForeignObjectNode","separation","siblings","nonSiblings","pathFunc","initialDepth","enableLegacyTransition","transitionDuration","scaleExtent","min","max","root","flexGrow","minWidth","MyFuckingStruct","Grid","item","xs","variable_grid","Card","CardContent","gutterBottom","Divider","f","pos","MyFuckingVariables","getRenderComponent","variable","i","undefined","pointers","variable_names","ButtonGroup","aria-label","classNames","arrays","length","pointer_names","forEach","pointer_name","ptr_idx","Tooltip","open","placement","arrow","Button","variables","container","variables_grid","display","padding","paddingTop","ComponentRender","render_object","Variables","Struct","Tree","id","RENDER_TYPES","parseTree","child","attributes","parseLL","parseStates","states","res","context_states","context_var_nodes","varT","includes","s","element","pointer","parseArray","fields","field","parseStruct","ControlledTreeView","handleToggle","event","nodeIds","setState","expanded","handleSelect","selected","charAt","handleTreeClick","parseInt","contexts","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","onNodeSelect","context","TreeItem","nodeId","label","i2","TabPanel","other","role","hidden","aria-labelledby","RenderingConatainer","componentDidMount","step","componentDidUpdate","handleChange","tab","utils","contextStates","contextName","contextVariables","v","Tabs","tabs","StyledRenderingConatainer","treeTab","connect","$$state","pick","codeActions","renderActions","STARTER_CODE","markdown","LandingPage","drawerOpen","marked","alertOpen","onSubmit","onShare","Math","random","substring","navigator","clipboard","writeText","onLeft","onRight","onDoubleRight","onDoubleLeft","window","location","href","currentState","Fragment","Collapse","in","Alert","onClose","Drawer","anchor","dangerouslySetInnerHTML","__html","marginLeft","marginRight","background","pageContainer","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","component","titles","program_output","IconButton","edge","flip","wrapper","disabled","CircularProgress","size","buttonProgress","StyledLandingPage","top","bottom","transform","margin","left","loadingActions","justify","justifyContent","fontSize","lineHeight","to","textDecoration","codeReducer","SHOW","responseReducer","defaultResponse","renderReducer","loadingReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","middlewares","thunkMiddleware","applyMiddleware","composedStore","createStore","storeCreator","rootReducer","App","path","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","500","textPrimary","text","secondary","main","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.989f6bd6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  FormControl,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: \"#1976d2\",\r\n  },\r\n  searchInput: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n  const { onClick, label } = props;\r\n  const classes = useStyles();\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    onClick && onClick(searchValue);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <OutlinedInput\r\n        onKeyDown={keyPress}\r\n        className={classes.searchInput}\r\n        id={label}\r\n        type=\"text\"\r\n        value={searchValue}\r\n        onChange={handleChange}\r\n        placeholder={label}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton aria-label=\"search\" onClick={handleClick} edge=\"end\">\r\n              <SearchIcon className={classes.icon} />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: theme.primary,\r\n\r\n  },\r\n}));\r\n\r\nexport default function AppBarWithSearch(props) {\r\n  const classes = useStyles();\r\n  const { title, onSearch = () => {} } = props;\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Box mt=\"0rem\" mb=\"0rem\" ml=\"1rem\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" noWrap>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\n\r\nconst createSymbols = (type, strings) =>\r\n  _.fromPairs(\r\n    _.map(strings, (str) => {\r\n      return [str, `${_.toUpper(type)}_${_.toUpper(str)}`];\r\n    })\r\n  );\r\n\r\nconst defaults = [\"CREATE\", \"DELETE\", \"INDEX\", \"NEW\", \"SHOW\", \"UPDATE\"];\r\n\r\nconst actions = [\r\n  [\"code\", []],\r\n  [\"response\", []],\r\n  [\"render\", []],\r\n  [\"loading\", []],\r\n];\r\n\r\nexport default _.chain(actions)\r\n  .map((action) => {\r\n    let [module, customActions] = action;\r\n    return [module, createSymbols(module, _.concat(defaults, customActions))];\r\n  })\r\n  .fromPairs()\r\n  .value();\r\n","import _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\n// TODO: Change this to point to our host\r\n\r\nconst parseResponse = (response) => {\r\n  const data = _.get(response, \"data\", {});\r\n  if (_.has(data, [\"payload\"])) {\r\n    return data[\"payload\"];\r\n  } else {\r\n    return _.omit(data, [\"errors\"]);\r\n  }\r\n};\r\n\r\nexport const request = (method) => (query, options = {}) => {\r\n  if (method === \"GET\" && !_.isEmpty(options.data)) {\r\n    options.params = options.data;\r\n  }\r\n\r\n  let baseUrl = \"http://localhost:5000\";\r\n\r\n  if (query === \"write\" || query === \"read\") {\r\n    baseUrl = \"https://cimtutor.herokuapp.com\";\r\n  }\r\n\r\n  console.log(\"Method: \" + method);\r\n  return axios({\r\n    method,\r\n    url: `${baseUrl}/${query}`,\r\n    timeout: 60 * 1000,\r\n    paramsSerializer: function (params) {\r\n      return qs.stringify(params, { arrayFormat: \"brackets\" });\r\n    },\r\n    ...options,\r\n  })\r\n    .then(parseResponse)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\n// Realistically we will only use get\r\nexport default _.chain([\"get\", \"post\", \"delete\", \"patch\", \"put\"])\r\n  .map((method) => [method, request(_.toUpper(method))])\r\n  .fromPairs()\r\n  .value();\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nexport const updateLoadingState = (state) => {\r\n  return {\r\n    type: actionTypes.loading.UPDATE,\r\n    payload: state,\r\n  };\r\n};\r\n","import actionTypes from \"../actionTypes\";\r\nimport request from \"../../util/request\";\r\nimport * as loadingActions from \"./loading\";\r\nimport sha256 from 'crypto-js/sha256';\r\n\r\nexport const sendCodeToCompile = (code) => {\r\n  const salt = \"63479AD69A090B258277EC8FBA6F99419A2FFB248981510657C944CCD1148E97\";\r\n  const pword = \"3C469E9D6C5875D37A43F353D4F88E61FCF812C66EEE3457465A40B0DA4153E0\";\r\n  const token = sha256(salt + pword).toString();\r\n\r\n  return function (dispatch) {\r\n    request\r\n      .post(\"processCode\", { \r\n        data: { \r\n          code: code,\r\n          token: token \r\n        },\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: actionTypes.loading.UPDATE,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: actionTypes.response.UPDATE,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        dispatch({\r\n          type: \"\",\r\n          payload: error,\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\nexport const sendCodeToShare = (key, code) => {\r\n  return function (dispatch) {\r\n    request\r\n      .post(\"write\", { data: { key: key, code: code } })\r\n      .then((data) => {\r\n        dispatch({\r\n          type: actionTypes.response.UPDATE,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        dispatch({\r\n          type: \"\",\r\n          payload: error,\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\nexport const getCodeToShare = (key) => {\r\n  return function (dispatch) {\r\n    request\r\n      .get(\"read\", { data: { key: key } })\r\n      .then((data) => {\r\n        dispatch({\r\n          type: actionTypes.code.NEW,\r\n          payload: Object.values(data).join(\"\"),\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        dispatch({\r\n          type: \"\",\r\n          payload: error,\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\nexport const updateCodeValue = (code) => {\r\n  return {\r\n    type: actionTypes.code.NEW,\r\n    payload: code,\r\n  };\r\n};\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nexport const updateRenderState = (state) => {\r\n  return {\r\n    type: actionTypes.render.UPDATE,\r\n    payload: state,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/theme-xcode\";\r\n\r\nconst styles = {\r\n  \"error-marker\": \"\",\r\n};\r\n\r\nclass CodeEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { value, onChange, activeLine, readOnly } = this.props;\r\n    let markers = [];\r\n    markers.push(\r\n      activeLine\r\n        ? {\r\n            startRow: activeLine - 1,\r\n            endRow: activeLine,\r\n            className: \"ace_marker\",\r\n            type: \"text\",\r\n          }\r\n        : {}\r\n    );\r\n    return (\r\n      <AceEditor\r\n        mode=\"c_cpp\"\r\n        theme=\"xcode\"\r\n        width=\"100%\"\r\n        onChange={onChange}\r\n        name=\"UNIQUE_ID_OF_DIV\"\r\n        editorProps={{ $blockScrolling: true }}\r\n        value={value}\r\n        markers={markers}\r\n        readOnly={readOnly}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CodeEditor);\r\n","import React from \"react\";\r\n\r\nimport { Paper, Box, Typography, makeStyles } from \"@material-ui/core\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleStyles: {\r\n    borderTop: `2px solid #E2E2E2`,\r\n    borderBottom: `2px solid #E2E2E2`,\r\n    backgroundColor: grey[100],\r\n    overflow: \"auto\",\r\n  },\r\n  titleBoxBorder: {\r\n    // border: `2px solid #E2E2E2`\r\n  },\r\n  outputTerminal: {\r\n    height: theme.spacing(24),\r\n    backgroundColor: \"#FFFFFF\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function SystemOutput(props) {\r\n  const classes = useStyles();\r\n  const { output, error } = props;\r\n\r\n  let output_lines_array = output ? output.split(\"\\n\") : [];\r\n  let error_msg = error ? (\r\n    <Typography variant=\"body1\" align=\"left\" color=\"error\">\r\n      {error}\r\n    </Typography>\r\n  ) : (\r\n    <div />\r\n  );\r\n\r\n  const output_lines = output_lines_array.map((line, index) => (\r\n    <Typography key={index} variant=\"body1\" align=\"left\">\r\n      {line}\r\n    </Typography>\r\n  ));\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"100%\", marginTop: \"2%\", overflow: \"scroll\" }}>\r\n      <Paper className={classes.titleStyles} square>\r\n        <Box className={classes.titleBoxBorder} p={1}>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle1\" align=\"left\">\r\n            System Output:\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Paper className={classes.outputTerminal} square>\r\n        <Box p={1}>\r\n          {error_msg}\r\n          {output_lines}\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tree from \"react-d3-tree\";\r\nimport _ from \"lodash\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: 216,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n    minWidth: 200,\r\n  },\r\n};\r\n\r\nconst renderForeignObjectNode = ({\r\n  nodeDatum,\r\n  toggleNode,\r\n  foreignObjectProps,\r\n}) => {\r\n  return (\r\n    <g>\r\n      <circle fill={\"#1976d2\"} r={15}></circle>\r\n      <foreignObject {...foreignObjectProps}>\r\n        <div style={{ border: \"1px solid black\", backgroundColor: \"#dedede\" }}>\r\n          <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name || \"null\"}</h3>\r\n          {nodeDatum.name && (\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              {\"value: \" + _.get(nodeDatum, \"attributes.value\", \"null\")}\r\n            </div>\r\n          )}\r\n          {nodeDatum.children && (\r\n            <button style={{ width: \"100%\" }} onClick={toggleNode}>\r\n              {nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </foreignObject>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst GRAPH_ATTRIBUTES = {\r\n  ll: \"horizontal\",\r\n  tree: \"vertical\",\r\n  translateX: 350,\r\n  translateY: 50,\r\n};\r\n\r\nclass MyFuckingTree extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data } = this.props;\r\n    const nodeSize = { x: 150, y: 400 };\r\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: 20 };\r\n\r\n    return (\r\n      <Tree\r\n        data={data}\r\n        translate={{\r\n          x: GRAPH_ATTRIBUTES.translateX,\r\n          y: GRAPH_ATTRIBUTES.translateY,\r\n        }}\r\n        orientation={GRAPH_ATTRIBUTES.tree}\r\n        renderCustomNodeElement={(rd3tProps) =>\r\n          renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\r\n        }\r\n        separation={{ siblings: 3, nonSiblings: 2 }}\r\n        pathFunc={\"straight\"}\r\n        initialDepth={2}\r\n        enableLegacyTransition={true}\r\n        transitionDuration={500}\r\n        scaleExtent={{ min: 0.1, max: 1 }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MyFuckingTree);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Box,\r\n  Divider,\r\n} from \"@material-ui/core/\";\r\n\r\nconst styles = {\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  variable_grid: {\r\n    textAlign: \"left\",\r\n  },\r\n  root: {\r\n    minWidth: \"10rem\",\r\n  },\r\n};\r\n\r\nclass MyFuckingStruct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data } = this.props;\r\n\r\n    return (\r\n      <Grid item xs={12} className={classes.variable_grid}>\r\n        <Box mt=\"3rem\" ml=\"3rem\">\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n                {_.get(data, \"name\", \"\")}\r\n              </Typography>\r\n\r\n              <Divider style={{ marginBottom: \"1rem\" }} />\r\n              {_.map(_.get(data, \"values\"), (f) => {\r\n                return (\r\n                  <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {_.get(f, \"field\") + \" : \" + _.get(f, \"value\")}\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MyFuckingStruct);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  Tooltip\r\n} from \"@material-ui/core/\";\r\n\r\nconst styles = {\r\n  variable_names: {\r\n    display: \"inline\",\r\n    padding: \"10px\",\r\n    align: \"left\",\r\n  },\r\n  variables_grid: {\r\n    paddingTop: \"20px\",\r\n  },\r\n  variable_grid: {\r\n    textAlign: \"left\",\r\n  },\r\n  arrays: {\r\n    paddingTop: '10px'\r\n  }\r\n};\r\n\r\nclass MyFuckingVariables extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getRenderComponent = (data, classes) => {\r\n    console.log(\"GET RENDER\", data);\r\n    let res = _.get(data, \"data\", []).map((variable, i) => {\r\n      if (_.get(variable, \"values\", undefined)) {\r\n        let pointers = _.get(variable, \"pointers\", [])\r\n        return (\r\n          <Grid key={i} item xs={12} className={classes.variable_grid}>\r\n            <Typography\r\n              key={variable.name}\r\n              variant=\"body1\"\r\n              className={classes.variable_names}\r\n            >\r\n              {variable.type} {variable.name}:\r\n            </Typography>\r\n            <ButtonGroup\r\n              color=\"primary\"\r\n              aria-label=\"outlined primary button group\"\r\n              classNames={classes.arrays}\r\n            >\r\n              {_.get(variable, \"values\", []).map((index, i) => {\r\n                if (_.get(variable, \"values\", []).length === pointers.length && (pointers[i].length > 0)) {\r\n                  let pointer_names = \"\";\r\n                  pointers[i].forEach((pointer_name, ptr_idx) => {\r\n                    if (ptr_idx < pointers[i].length - 1) {\r\n                      pointer_names += pointer_name + \",  \"\r\n                    } else {\r\n                      pointer_names += pointer_name\r\n                    }\r\n                  });\r\n\r\n                  return (\r\n                    <Tooltip style={{'paddingBottom':\"-10px\"}}open=\"true\" title={'* ' + pointer_names} placement=\"top\" arrow={true}>\r\n                      <Button key={variable.name + \"-\" + i}>{index}</Button>\r\n                    </Tooltip>\r\n                  )\r\n                }\r\n                return (<Button key={variable.name + \"-\" + i}>{index}</Button>)\r\n              })}\r\n            </ButtonGroup>\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return (\r\n          <Grid item xs={12} className={classes.variable_grid}>\r\n            <Typography\r\n              key={variable.name}\r\n              variant=\"body1\"\r\n              className={classes.variable_names}\r\n            >\r\n              {variable.type} {variable.name}:\r\n            </Typography>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n              {variable.value}\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  render() {\r\n    const { classes, data } = this.props;\r\n    const variables = this.getRenderComponent(data, classes);\r\n\r\n    console.log(variables);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={5} className={classes.variables_grid}>\r\n          {variables}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MyFuckingVariables);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { withStyles } from \"@material-ui/core/\";\r\n\r\nimport Tree from \"./Tree\";\r\nimport Struct from \"./Struct\";\r\nimport Variables from \"./Variables\";\r\n\r\nconst styles = {};\r\n\r\nclass ComponentRender extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    let render_object = <></>;\r\n\r\n    if (_.get(data, \"type\") === \"VARIABLES\") {\r\n      render_object = <Variables data={data} />;\r\n    } else if (_.get(data, \"type\") === \"STRUCT\") {\r\n      return <Struct data={data} />;\r\n    } else {\r\n      render_object = <Tree data={data} />;\r\n    }\r\n\r\n    return (\r\n      <div id=\"treeWrapper\" style={{ width: \"50em\", height: \"30em\" }}>\r\n        {render_object}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(ComponentRender);\r\n","import _ from \"lodash\";\r\n\r\nconst RENDER_TYPES = {\r\n  LinkedListNode: \"LLNode\",\r\n  TreeNode: \"TreeNode\",\r\n  Arrays: /\\[([\\d]+)\\]/g,\r\n};\r\n\r\nexport const a11yProps = (index) => {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nexport const parseTree = (state, variables) => {\r\n  if (state === null) {\r\n    return {};\r\n  }\r\n  const name = _.get(variables, `${_.get(state, \"address\")}`, null);\r\n  const children = [];\r\n  const value = _.get(state, \"value\", null);\r\n\r\n  _.get(state, \"children\", []).forEach((child) => {\r\n    children.push(parseTree(child, variables));\r\n  });\r\n\r\n  return { name, attributes: { value }, children };\r\n};\r\n\r\nexport const parseLL = (state, variables) => {\r\n  const name = _.get(variables, `${_.get(state, \"address\")}`, null);\r\n  const children = [];\r\n  const value = _.get(state, \"value\", null);\r\n\r\n  _.get(state, \"children\", []).forEach((child) => {\r\n    children.push(parseLL(child, variables));\r\n  });\r\n\r\n  return { name, attributes: { value }, children };\r\n};\r\n\r\nconst parseArray = (state, variables) => {\r\n  const name = _.get(variables, `${_.get(state, \"address\")}`, null);\r\n  const values = _.get(state, \"values\", null);\r\n  const pointers =   _.get(state, \"pointers\", []).map(element => \r\n    element.map(pointer => _.get(variables, pointer, null))\r\n  );\r\n\r\n  return { name, values: values, pointers: pointers, type: _.get(state, \"variable_type\") };\r\n};\r\n\r\nconst parseStruct = (state, variables) => {\r\n  const name = _.get(state, \"name\", \"\");\r\n  const fields = _.get(state, \"fields\", []);\r\n  const rf = _.map(fields, (field) => {\r\n    return { field: _.get(field, \"Field\"), value: _.get(field, \"Value\") };\r\n  });\r\n  return { name, values: rf, type: \"STRUCT\" };\r\n};\r\n\r\n// Need to parse states with relation to context\r\nexport const parseStates = (states, variables) => {\r\n  let res = [];\r\n  let var_nodes = [];\r\n\r\n  states.forEach((value) => {\r\n    const context_states = _.get(value, \"states\", {});\r\n    const context_var_nodes = [];\r\n\r\n    context_states.forEach((state) => {\r\n      const varT = _.get(state, \"variable_type\", \"\");\r\n\r\n      if (varT.includes(RENDER_TYPES.LinkedListNode)) {\r\n        const s = parseLL(_.get(state, \"states\", {}), variables);\r\n        res.push(s);\r\n      } else if (varT.includes(RENDER_TYPES.TreeNode)) {\r\n        const s = parseTree(_.get(state, \"states\", {}), variables);\r\n        res.push(s);\r\n      } else if (_.get(state, \"values\", undefined)) {\r\n        const s = parseArray(state, variables);\r\n        context_var_nodes.push(s);\r\n      } else if (_.get(state, \"fields\", undefined) !== undefined) {\r\n        const s = parseStruct(state, variables);\r\n        res.push(s);\r\n      } else {\r\n        if (_.get(state, \"name\") !== undefined) {\r\n          context_var_nodes.push({\r\n            name: _.get(state, \"name\"),\r\n            type: _.get(state, \"variable_type\"),\r\n            value: _.get(state, \"value\"),\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if (context_var_nodes.length !== 0) {\r\n      res.push({ type: \"VARIABLES\", data: context_var_nodes });\r\n    }\r\n  });\r\n\r\n  console.log(\"PARSED RES\", res);\r\n\r\n  return { res };\r\n};\r\n\r\nexport const parseStatesForMenu = (states, variables) => {\r\n  let contexts = [];\r\n  // dogshit code, idgaf anymore\r\n\r\n  states.forEach((value) => {\r\n    const contextStates = _.get(value, \"states\", {});\r\n    const contextName = _.get(value, \"context\", {});\r\n    const contextVariables = [];\r\n    if (contextStates.length !== 0) {\r\n      let v = false;\r\n      contextStates.forEach((state) => {\r\n        if (_.get(state, \"value\") || _.get(state, \"values\")) {\r\n          v = true;\r\n        } else {\r\n          contextVariables.push(\r\n            _.get(variables, `${_.get(state, \"address\")}`, null)\r\n          );\r\n        }\r\n      });\r\n\r\n      if (v) {\r\n        contextVariables.push(\"Variables\");\r\n      }\r\n\r\n      contexts.push({ context: contextName, variables: contextVariables });\r\n    }\r\n  });\r\n\r\n  return { contexts };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport _, { mapValues } from \"lodash\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: 216,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n    minWidth: 200,\r\n  },\r\n};\r\n\r\nclass ControlledTreeView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: [],\r\n      selected: [],\r\n    };\r\n  }\r\n\r\n  handleToggle = (event, nodeIds) => {\r\n    this.setState({ expanded: nodeIds });\r\n  };\r\n\r\n  handleSelect = (event, nodeIds) => {\r\n    this.setState({ selected: nodeIds });\r\n    if (nodeIds.charAt(0) !== \"#\") {\r\n      this.props.handleTreeClick(parseInt(nodeIds, 10));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, res, contexts } = this.props;\r\n    const { expanded, selected } = this.state;\r\n    let index = 0;\r\n    return (\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        expanded={expanded}\r\n        selected={selected}\r\n        onNodeToggle={this.handleToggle}\r\n        onNodeSelect={this.handleSelect}\r\n      >\r\n        {_.map(contexts, (context, i) => {\r\n          return (\r\n            <TreeItem\r\n              key={i}\r\n              nodeId={\"#\".concat(i)}\r\n              label={_.get(context, \"context\")}\r\n            >\r\n              {_.map(_.get(context, \"variables\"), (variable, i2) => {\r\n                index += 1;\r\n                return (\r\n                  <TreeItem\r\n                    key={i2}\r\n                    nodeId={(index - 1).toString()}\r\n                    label={variable}\r\n                  />\r\n                );\r\n              })}\r\n            </TreeItem>\r\n          );\r\n        })}\r\n      </TreeView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ControlledTreeView);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as codeActions from \"../../redux/actions/code\";\r\nimport * as renderActions from \"../../redux/actions/render\";\r\nimport ComponentRender from \"./ComponentRender\";\r\nimport * as utils from \"../../util/util\";\r\nimport ControlledTreeView from \"./TreeTab\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    height: \"500px\",\r\n    width: \"100%\",\r\n  },\r\n  tabs: {\r\n    border: `1px solid rgba(0, 0, 0, 0.12);`,\r\n  },\r\n  treeTab: {\r\n    width: \"6rem\",\r\n  },\r\n};\r\n\r\nclass RenderingConatainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      data: {},\r\n      tab: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount = (props) => {\r\n    this.setState({ step: _.get(props, \"render\", 0) });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { render } = this.props;\r\n    if (this.props.render !== this.state.step) {\r\n      this.setState({ step: render });\r\n    }\r\n  };\r\n\r\n  // not used, but will keep\r\n  handleChange = (event, value) => {\r\n    this.setState({ tab: value });\r\n  };\r\n\r\n  handleTreeClick = (value) => {\r\n    this.setState({ tab: value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, response } = this.props;\r\n    const { tab } = this.state;\r\n    const states = _.get(\r\n      this.props.response,\r\n      `states[${this.props.render}][1]`,\r\n      []\r\n    );\r\n    const variables = _.get(this.props.response, `var_address`, {});\r\n    const { res } = utils.parseStates(states, variables);\r\n    const { contexts } = utils.parseStatesForMenu(states, variables);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          variant=\"scrollable\"\r\n          value={tab}\r\n          onChange={this.handleChange}\r\n          aria-label=\"Vertical tabs example\"\r\n          className={classes.tabs}\r\n        >\r\n          <Box\r\n            style={{ width: \"200px\", textAlign: \"left\", overflow: \"hidden\" }}\r\n          >\r\n            <ControlledTreeView\r\n              handleTreeClick={this.handleTreeClick}\r\n              res={res}\r\n              contexts={contexts}\r\n            />\r\n          </Box>\r\n        </Tabs>\r\n        {_.map(res, (v, i) => {\r\n          return (\r\n            <TabPanel key={i} value={tab} index={i}>\r\n              <ComponentRender data={v} />\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledRenderingConatainer = withStyles(styles)(RenderingConatainer);\r\nconst select = ($$state) => _.pick($$state, [\"code\", \"response\", \"render\"]);\r\nexport default connect(select, { ...codeActions, ...renderActions })(\r\n  StyledRenderingConatainer\r\n);\r\n","export const STARTER_CODE = `// This Test Script is for injection for array algorithms\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    //Add your code here\r\n    IntegerTreeNode *intTreeNode1= new IntegerTreeNode(1);\r\n    IntegerTreeNode *intTreeNode2 = new IntegerTreeNode(2);\r\n    StringTreeNode *strTreeNode1 =new StringTreeNode(\"String Node 1\");\r\n    StringTreeNode *strTreeNode2 = new StringTreeNode(\"String Node 2\");\r\n    StringTreeNode *strTreeNode3 = new StringTreeNode(\"String Node 3\");\r\n\r\n    int nums[5] = {1,2,3,4,5};\r\n    int i = 0;\r\n\r\n    strTreeNode2->left(strTreeNode3);\r\n    intTreeNode1->left(strTreeNode1);\r\n    intTreeNode1->right(intTreeNode2);\r\n    strTreeNode1->left(strTreeNode2);\r\n\r\n    IntegerLLNode *intNode = new IntegerLLNode(5);\r\n    StringLLNode *stringNode = new StringLLNode(\"123123123\");\r\n    intNode->next(stringNode);\r\n\r\n    return 0;\r\n}`;\r\n","let markdown=`# Hello 👋\r\n\r\nWe have made two custom data structures available for you to use:\r\n\r\n* Linked List Node\r\n* Tree Node\r\n\r\n## Linked List Node\r\n\r\nFor a Linked List Node we have added support for following data types:\r\n\r\n* Int -> \\`IntegerLLNode\\`\r\n* Short Int -> \\`ShortIntLLNode\\`\r\n* Long Int -> \\`LongIntLLNode\\`\r\n* Unsigned Int -> \\`UnsignedIntLLNode\\`\r\n* Float -> \\`FloatLLNode\\`\r\n* Double -> \\`DoubleLLNode\\`\r\n* Signed Char -> \\`SignedCharLLNode\\`\r\n* Unsigned Char -> \\`UnsignedCharLLNode\\`\r\n* String -> \\`StringLLNode\\`\r\n\r\nExamples:\r\n\\`\\`\\`c++\r\n\r\n  IntegerLLNode *intNode = new IntegerLLNode(1);\r\n  StringLLNode *stringNode = new StringLLNode(\"String Node 1\");\r\n  DoubleLLNode *doubleNode = new DoubleLLNode(2.5);\r\n\r\n  intNode->next(stringNode);\r\n  stringNode->next(doubleNode);\r\n  \r\n\\`\\`\\`\r\n\r\nThe Linked List Node allows you to create a linked list that contains the data types listed above.\r\n\r\n## Binary Tree Node\r\n\r\nFor a Binary Tree Node we have added support for following data types:\r\n\r\n* Int -> \\`IntegerTreeNode\\`\r\n* Short Int -> \\`ShortIntTreeNode\\`\r\n* Long Int -> \\`LongIntTreeNode\\`\r\n* Unsigned Int -> \\`UnsignedIntTreeNode\\`\r\n* Float -> \\`FloatTreeNode\\`\r\n* Double -> \\`DoubleTreeNode\\`\r\n* Signed Char -> \\`SignedCharTreeNode\\`\r\n* Unsigned Char -> \\`UnsignedCharTreeNode\\`\r\n* String -> \\`StringTreeNode\\`\r\n\r\nExamples:\r\n\\`\\`\\`c++\r\n\r\nIntegerTreeNode *intTreeNode1= new IntegerTreeNode(x);\r\nIntegerTreeNode *intTreeNode2 = new IntegerTreeNode(2);\r\nStringTreeNode *strTreeNode1 =new StringTreeNode(\"String Node 1\");\r\nStringTreeNode *strTreeNode2 = new StringTreeNode(\"String Node 2\");\r\nStringTreeNode *strTreeNode3 = new StringTreeNode(\"String Node 3\");\r\n\r\nstrTreeNode2->left(strTreeNode3);\r\nintTreeNode1->left(strTreeNode1);\r\nintTreeNode1->right(intTreeNode2);\r\nstrTreeNode1->left(strTreeNode2);\r\n\r\n\r\nTreeNode * root = strTreeNode1->getRoot();\r\nTreeNode * root_left = root->getLeft();\r\nTreeNode * root_right = root->getRight();\r\n\r\n\\`\\`\\`\r\n\r\nThe Binary Tree Node allows you to create a binary tree that contains the data types listed above. \\n\r\nYou can call getRoot() on any node from tree to get the root of the tree.\\n\r\nGiven anynode, you can get the left and right child by calling getLeft() and getRight().\\n\r\n\\n\r\n\\n\r\n`\r\n\r\nexport default markdown","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Collapse,\r\n  Grid,\r\n  withStyles,\r\n  Box,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Split from \"react-split\";\r\nimport { connect } from \"react-redux\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\nimport Prism from \"prismjs\"; //css for Prism is imported in ThemeSelector\r\nimport \"prismjs/components/prism-c\";\r\nimport \"prismjs/components/prism-cpp\";\r\nimport * as marked from \"marked\";\r\n\r\nimport StyledTopAppBar from \"../components/styled/AppBar\";\r\nimport * as codeActions from \"../redux/actions/code\";\r\nimport * as renderActions from \"../redux/actions/render\";\r\nimport * as loadingActions from \"../redux/actions/loading\";\r\nimport CodeEditor from \"../components/styled/CodeEditor\";\r\nimport SystemOutput from \"../components/styled/SystemOutput\";\r\nimport RenderingContainer from \"./rendering\";\r\nimport { STARTER_CODE } from \"../constants/starterCode\";\r\nimport markdown from \"../constants/readme\";\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    paddingTop: \"1rem\",\r\n    padding: \"2rem\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  flip: {\r\n    \"-webkit-transform\": \"scaleX(-1)\",\r\n    transform: \"scaleX(-1)\",\r\n  },\r\n  background: {\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  titles: {\r\n    display: \"flex\",\r\n    color: \"#404040\",\r\n  },\r\n  wrapper: {\r\n    margin: \"0 2rem 0 4rem\",\r\n    position: \"relative\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"#fff\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n};\r\n\r\nclass LandingPage extends React.Component {\r\n  state = { drawerOpen: false, markdown: marked(markdown), alertOpen: false };\r\n\r\n  componentDidMount() {\r\n    let key = window.location.href\r\n      .split(\"http://localhost:3000/LandingPage/\")\r\n      .join(\"\");\r\n    if (key !== \"\") {\r\n      const { getCodeToShare } = this.props;\r\n      getCodeToShare(key);\r\n    }\r\n    this.props.updateCodeValue(STARTER_CODE);\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.props.updateCodeValue(value);\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const {\r\n      sendCodeToCompile,\r\n      updateRenderState,\r\n      code,\r\n      updateLoadingState,\r\n    } = this.props;\r\n    updateLoadingState(true);\r\n    sendCodeToCompile(code);\r\n    updateRenderState(0);\r\n  };\r\n\r\n  onShare = () => {\r\n    const { sendCodeToShare, code } = this.props;\r\n    const r =\r\n      Math.random().toString(36).substring(2, 15) +\r\n      Math.random().toString(36).substring(2, 15);\r\n    navigator.clipboard.writeText(\"http://localhost:3000/LandingPage/\" + r);\r\n    const { alertOpen } = this.state;\r\n    this.setState({ alertOpen: !alertOpen });\r\n    sendCodeToShare(r, code);\r\n  };\r\n\r\n  onClick = () => {\r\n    const { drawerOpen } = this.state;\r\n    this.setState({ drawerOpen: !drawerOpen });\r\n  };\r\n\r\n  onLeft = () => {\r\n    this.props.updateRenderState(Math.max(this.props.render - 1, 0));\r\n  };\r\n\r\n  onRight = () => {\r\n    const { updateRenderState, response, render } = this.props;\r\n    let length = _.get(response, `states`, []).length;\r\n    updateRenderState(Math.min(render + 1, length - 1));\r\n  };\r\n\r\n  onDoubleRight = () => {\r\n    const { updateRenderState, response } = this.props;\r\n    let length = _.get(response, `states`, []).length;\r\n    updateRenderState(length - 1);\r\n  };\r\n\r\n  onDoubleLeft = () => {\r\n    this.props.updateRenderState(0);\r\n  };\r\n\r\n  render() {\r\n    const { classes, code, response, render, loading } = this.props;\r\n\r\n    let currentState = _.get(response, `states[${render}]`, null);\r\n    let activeLine = null || (currentState && currentState[0]);\r\n    const { drawerOpen, markdown, alertOpen } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Collapse in={alertOpen}>\r\n          <Alert open={alertOpen} onClose={this.onShare}>\r\n            Your link is copied to your clipboard!\r\n          </Alert>\r\n        </Collapse>\r\n        <Drawer anchor={\"right\"} open={drawerOpen} onClose={this.onClick}>\r\n          <Box\r\n            dangerouslySetInnerHTML={{ __html: markdown }}\r\n            marginLeft=\"30px\"\r\n            marginRight=\"30px\"\r\n          ></Box>\r\n        </Drawer>\r\n        <Grid className={classes.background}>\r\n          <StyledTopAppBar title=\"CimTutor\" onSearch={this.onSearch} />\r\n          <Grid container className={classes.pageContainer} spacing={2}>\r\n            <Box className=\"work-area\">\r\n              <Split\r\n                className=\"wrapper-card\"\r\n                sizes={[35, 65]}\r\n                minSize={100}\r\n                expandToMin={false}\r\n                gutterSize={10}\r\n                gutterAlign=\"center\"\r\n                snapOffset={30}\r\n                dragInterval={1}\r\n                direction=\"horizontal\"\r\n                cursor=\"col-resize\"\r\n              >\r\n                <Box\r\n                  style={{ width: \"100%\", height: \"100%\", paddingTop: \"32px\" }}\r\n                >\r\n                  <CodeEditor\r\n                    onChange={this.onChange}\r\n                    value={code}\r\n                    activeLine={activeLine}\r\n                  />\r\n                </Box>\r\n\r\n                <Box style={{ width: \"100%\", height: \"100%\" }}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    component=\"h6\"\r\n                    className={classes.titles}\r\n                  >\r\n                    Visualization of Code\r\n                  </Typography>\r\n                  <RenderingContainer />\r\n                  <SystemOutput\r\n                    output={response.program_output}\r\n                    error={response.error}\r\n                  />\r\n                </Box>\r\n              </Split>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n            <Box ml=\"4rem\">\r\n              <Toolbar>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  className={classes.flip}\r\n                  onClick={this.onDoubleLeft}\r\n                >\r\n                  <DoubleArrowIcon />\r\n                </IconButton>\r\n                <IconButton onClick={this.onLeft} edge=\"end\" color=\"inherit\">\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n                <IconButton onClick={this.onRight} edge=\"end\" color=\"inherit\">\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  onClick={this.onDoubleRight}\r\n                >\r\n                  <DoubleArrowIcon />\r\n                </IconButton>\r\n\r\n                <Box className={classes.wrapper} ml=\"4rem\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.onSubmit}\r\n                    disabled={loading}\r\n                  >\r\n                    Submit Code\r\n                  </Button>\r\n                  {loading && (\r\n                    <CircularProgress\r\n                      size={24}\r\n                      className={classes.buttonProgress}\r\n                    />\r\n                  )}\r\n                </Box>\r\n                <Box ml=\"4rem\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.onShare}\r\n                  >\r\n                    Share Code\r\n                  </Button>\r\n                </Box>\r\n                <Box ml=\"4rem\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.onClick}\r\n                  >\r\n                    How to Use\r\n                  </Button>\r\n                </Box>\r\n              </Toolbar>\r\n            </Box>\r\n          </AppBar>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledLandingPage = withStyles(styles)(LandingPage);\r\nconst select = ($$state) =>\r\n  _.pick($$state, [\"code\", \"response\", \"render\", \"loading\"]);\r\nexport default connect(select, {\r\n  ...codeActions,\r\n  ...renderActions,\r\n  ...loadingActions,\r\n})(StyledLandingPage);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Box,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton\r\n} from \"@material-ui/core/\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CodeEditor from \"../components/styled/CodeEditor\";\r\nimport RenderingContainer from \"./rendering\";\r\nimport Split from \"react-split\";\r\nimport StyledTopAppBar from \"../components/styled/AppBar\";\r\nimport * as codeActions from \"../redux/actions/code\";\r\nimport * as renderActions from \"../redux/actions/render\";\r\nimport { STARTER_CODE } from \"../constants/starterCode\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    padding: \"4rem\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  flip: {\r\n    \"-webkit-transform\": \"scaleX(-1)\",\r\n    transform: \"scaleX(-1)\",\r\n  },\r\n};\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.updateCodeValue(STARTER_CODE);\r\n    this.props.updateRenderState(0);\r\n  }\r\n\r\n  onLeft = () => {\r\n    this.props.updateRenderState(Math.max(this.props.render - 1, 0));\r\n  };\r\n\r\n  onRight = () => {\r\n    const { updateRenderState, response, render } = this.props;\r\n    let length = _.get(response, `states`, []).length;\r\n    updateRenderState(Math.min(render + 1, length - 1));\r\n  };\r\n\r\n  onDoubleRight = () => {\r\n    const { updateRenderState, response } = this.props;\r\n    let length = _.get(response, `states`, []).length;\r\n    updateRenderState(length - 1);\r\n  };\r\n\r\n  onDoubleLeft = () => {\r\n    this.props.updateRenderState(0);\r\n  };\r\n\r\n  onSubmit = () => {};\r\n\r\n  render() {\r\n    const { classes, code, response, render } = this.props;\r\n    let currentState = _.get(response, `states[${render}]`, null);\r\n    let activeLine = null || (currentState && currentState[0]);\r\n    return (\r\n      <Grid>\r\n        <StyledTopAppBar title=\"CimTutor\" onSearch={this.onSearch} />\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <>\r\n              <Box className={classes.pageContainer}\r\n              display=\"flex\" \r\n              justifyContent=\"center\"\r\n              >\r\n                <Box\r\n                padding=\"10px\"\r\n                width= \"60%\"\r\n                fontSize = \"20px\"\r\n                lineHeight = \"1.6\"\r\n                >\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Typography>\r\n                        As the world becomes more digitized, software development has\r\n                        become increasingly popular. More individuals are starting to\r\n                        learn how to program, however they face a steep learning curve\r\n                        at the early stage of their learning process. The goal of\r\n                        CimTutor is to provide these individuals with a basic\r\n                        understanding of computer science concepts through code\r\n                        visualization. CimTutor is a web application that analyzes C++\r\n                        code snippets and presents the associated machine level\r\n                        processes graphically to the user. The program visualizes key\r\n                        data structures used in the code segment and performs time\r\n                        complexity breakdowns. CimTutor will be built and scaled out\r\n                        using distributed systems. Input code segments will be\r\n                        analyzed on the backend using syntax trees, pattern\r\n                        recognition algorithms, and compiler knowledge. The analysis\r\n                        results will then be sent to the frontend of the application\r\n                        for visualization. The main advantage of CimTutor is that it\r\n                        is able to correlate algorithms and their corresponding data\r\n                        structures visually and present them more intuitively\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                  \r\n                </Box>\r\n              </Box>\r\n            </>\r\n          </Grid>\r\n          <Grid item>\r\n              <Card variant=\"outlined\">\r\n                <CardContent>\r\n                  <Box className=\"sample-area\">\r\n                    <Split\r\n                      className=\"wrapper-card\"\r\n                      sizes={[35, 65]}\r\n                      minSize={100}\r\n                      expandToMin={false}\r\n                      gutterSize={10}\r\n                      gutterAlign=\"center\"\r\n                      snapOffset={30}\r\n                      dragInterval={1}\r\n                      direction=\"horizontal\"\r\n                      cursor=\"col-resize\"\r\n                      >\r\n                      <Box\r\n                        style={{ width: \"100%\", height: \"100%\", paddingTop: \"32px\" }}\r\n                      >\r\n                        <CodeEditor\r\n                          onChange={this.onChange}\r\n                          value={code}\r\n                          activeLine={activeLine}\r\n                          readOnly= {true}\r\n                        />\r\n                        <Toolbar>\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                            className={classes.flip}\r\n                            onClick={this.onDoubleLeft}\r\n                          >\r\n                            <DoubleArrowIcon />\r\n                          </IconButton>\r\n                          <IconButton onClick={this.onLeft} edge=\"end\" color=\"inherit\">\r\n                            <ChevronLeftIcon />\r\n                          </IconButton>\r\n                          <IconButton onClick={this.onRight} edge=\"end\" color=\"inherit\">\r\n                            <ChevronRightIcon />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                            onClick={this.onDoubleRight}\r\n                          >\r\n                            <DoubleArrowIcon />\r\n                          </IconButton>\r\n                        </Toolbar>\r\n                      </Box>\r\n\r\n                      <Box style={{ width: \"100%\", height: \"100%\" }}>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          component=\"h6\"\r\n                          className={classes.titles}\r\n                        >\r\n                          Visualization of Code\r\n                        </Typography>\r\n                        <RenderingContainer />\r\n                      </Box>\r\n                    </Split>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"primary\"\r\n          className={classes.appBar}\r\n        >\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Toolbar>\r\n                <Link to=\"/LandingPage\" style={{ textDecoration: 'none' }}>\r\n                  <Button variant=\"contained\" color=\"secondary\"> Let's Start!</Button> \r\n                </Link>\r\n            </Toolbar>\r\n          </Box>\r\n        </AppBar>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledLandingPage = withStyles(styles)(LandingPage);\r\nconst select = ($$state) => _.pick($$state, [\"code\", \"response\", \"render\"]);\r\nexport default connect(select, { ...codeActions, ...renderActions })(\r\n  StyledLandingPage\r\n);\r\n","import _ from \"lodash\";\r\nimport actionTypes from \"../actionTypes\";\r\n\r\nconst codeReducer = ($$state = \"\", action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.code.NEW:\r\n      return payload;\r\n    case actionTypes.code.SHOW:\r\n    default:\r\n      return $$state;\r\n  }\r\n};\r\n\r\nexport default codeReducer;\r\n","export default {\r\n  \"custom_data_types\": {},\r\n  \"error\": \"\",\r\n  \"program_output\": \"\",\r\n  \"states\": [\r\n      [\r\n          8,\r\n          []\r\n      ],\r\n      [\r\n          10,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": []\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          11,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          12,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          13,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          14,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          16,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624130\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624130\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 3\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          17,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624130\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624130\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 3\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          19,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624130\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624130\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 3\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          20,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624090\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624090\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624130\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x6240e0\",\r\n                                      \"value\": \"String Node 3\"\r\n                                  },\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          21,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624130\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x6240e0\",\r\n                                      \"value\": \"String Node 3\"\r\n                                  },\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624060\",\r\n                          \"name\": \"intTreeNode2\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624060\",\r\n                              \"children\": [\r\n                                  null,\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"2\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          22,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"intTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"IntegerTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6240e0\",\r\n                          \"name\": \"strTreeNode3\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6240e0\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624130\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x6240e0\",\r\n                                      \"value\": \"String Node 3\"\r\n                                  },\r\n                                  null\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"String Node 2\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          24,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          25,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624180\",\r\n                          \"name\": \"intNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624180\",\r\n                              \"children\": [],\r\n                              \"next_address\": \"(nil)\",\r\n                              \"value\": \"5\"\r\n                          },\r\n                          \"variable_type\": \"IntegerLLNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          26,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624180\",\r\n                          \"name\": \"intNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624180\",\r\n                              \"children\": [],\r\n                              \"next_address\": \"(nil)\",\r\n                              \"value\": \"5\"\r\n                          },\r\n                          \"variable_type\": \"IntegerLLNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x6241b0\",\r\n                          \"name\": \"stringNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x6241b0\",\r\n                              \"children\": [],\r\n                              \"next_address\": \"(nil)\",\r\n                              \"value\": \"123123123\"\r\n                          },\r\n                          \"variable_type\": \"StringLLNode\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          28,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624180\",\r\n                          \"name\": \"stringNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624180\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x6241b0\",\r\n                                      \"children\": [],\r\n                                      \"next_address\": \"(nil)\",\r\n                                      \"value\": \"123123123\"\r\n                                  }\r\n                              ],\r\n                              \"next_address\": \"0x6241b0\",\r\n                              \"value\": \"5\"\r\n                          },\r\n                          \"variable_type\": \"StringLLNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          29,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624180\",\r\n                          \"name\": \"stringNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624180\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x6241b0\",\r\n                                      \"children\": [],\r\n                                      \"next_address\": \"(nil)\",\r\n                                      \"value\": \"123123123\"\r\n                                  }\r\n                              ],\r\n                              \"next_address\": \"0x6241b0\",\r\n                              \"value\": \"5\"\r\n                          },\r\n                          \"variable_type\": \"StringLLNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      ],\r\n      [\r\n          319,\r\n          [\r\n              {\r\n                  \"context\": \"main\",\r\n                  \"states\": [\r\n                      {\r\n                          \"address\": \"0x623c20\",\r\n                          \"name\": \"strTreeNode1\",\r\n                          \"states\": {\r\n                              \"address\": \"0x623c20\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x624090\",\r\n                                      \"children\": [\r\n                                          {\r\n                                              \"address\": \"0x6240e0\",\r\n                                              \"children\": [\r\n                                                  {\r\n                                                      \"address\": \"0x624130\",\r\n                                                      \"children\": [\r\n                                                          null,\r\n                                                          null\r\n                                                      ],\r\n                                                      \"direction\": \"Left\",\r\n                                                      \"parent_address\": \"0x6240e0\",\r\n                                                      \"value\": \"String Node 3\"\r\n                                                  },\r\n                                                  null\r\n                                              ],\r\n                                              \"direction\": \"Left\",\r\n                                              \"parent_address\": \"0x624090\",\r\n                                              \"value\": \"String Node 2\"\r\n                                          },\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Left\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"String Node 1\"\r\n                                  },\r\n                                  {\r\n                                      \"address\": \"0x624060\",\r\n                                      \"children\": [\r\n                                          null,\r\n                                          null\r\n                                      ],\r\n                                      \"direction\": \"Right\",\r\n                                      \"parent_address\": \"0x623c20\",\r\n                                      \"value\": \"2\"\r\n                                  }\r\n                              ],\r\n                              \"direction\": \"Root\",\r\n                              \"parent_address\": \"(nil)\",\r\n                              \"value\": \"1\"\r\n                          },\r\n                          \"variable_type\": \"StringTreeNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffea84\",\r\n                          \"name\": \"i\",\r\n                          \"value\": \"0\",\r\n                          \"variable_type\": \"int\\r\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x624180\",\r\n                          \"name\": \"stringNode\",\r\n                          \"states\": {\r\n                              \"address\": \"0x624180\",\r\n                              \"children\": [\r\n                                  {\r\n                                      \"address\": \"0x6241b0\",\r\n                                      \"children\": [],\r\n                                      \"next_address\": \"(nil)\",\r\n                                      \"value\": \"123123123\"\r\n                                  }\r\n                              ],\r\n                              \"next_address\": \"0x6241b0\",\r\n                              \"value\": \"5\"\r\n                          },\r\n                          \"variable_type\": \"StringLLNode\"\r\n                      },\r\n                      {\r\n                          \"address\": \"0x7fffffffeb90\",\r\n                          \"name\": \"nums\",\r\n                          \"pointers\": [\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              [],\r\n                              []\r\n                          ],\r\n                          \"values\": [\r\n                              \"1\",\r\n                              \"2\",\r\n                              \"3\",\r\n                              \"4\",\r\n                              \"5\"\r\n                          ],\r\n                          \"variable_type\": \"int [5]\\r\"\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"context\": \"__libc_start_main\",\r\n                  \"states\": []\r\n              }\r\n          ]\r\n      ]\r\n  ],\r\n  \"status\": \"Success\",\r\n  \"var_address\": {\r\n      \"0x623c20\": \"intTreeNode1\",\r\n      \"0x624060\": \"intTreeNode2\",\r\n      \"0x624090\": \"strTreeNode1\",\r\n      \"0x6240e0\": \"strTreeNode2\",\r\n      \"0x624130\": \"strTreeNode3\",\r\n      \"0x624180\": \"intNode\",\r\n      \"0x6241b0\": \"stringNode\",\r\n      \"0x7fffffffea84\": \"i\",\r\n      \"0x7fffffffeb90\": \"nums\"\r\n  }\r\n}","import _ from \"lodash\";\r\nimport actionTypes from \"../actionTypes\";\r\nimport defaultResponse from \"../../constants/sampleResponse\"\r\nconst responseReducer = ($$state = defaultResponse, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.response.UPDATE:\r\n      return payload;\r\n    default:\r\n      return $$state;\r\n  }\r\n};\r\n\r\nexport default responseReducer;\r\n","import _ from \"lodash\";\r\nimport actionTypes from \"../actionTypes\";\r\n\r\nconst renderReducer = ($$state = -1, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.render.NEW:\r\n      return payload;\r\n    case actionTypes.render.UPDATE:\r\n      return payload;\r\n    default:\r\n      return $$state;\r\n  }\r\n};\r\n\r\nexport default renderReducer;\r\n","import _ from \"lodash\";\r\nimport actionTypes from \"../actionTypes\";\r\n\r\nconst loadingReducer = ($$state = false, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.loading.UPDATE:\r\n      return payload;\r\n    default:\r\n      return $$state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport code from \"./code\";\r\nimport response from \"./response\";\r\nimport render from \"./render\";\r\nimport loading from \"./loading\";\r\n\r\nexport default combineReducers({ code, response, render, loading });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = (props) => {\r\n  const middlewares = [thunkMiddleware];\r\n\r\n  const composedStore = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n  const storeCreator = composedStore(createStore);\r\n\r\n  const data = {};\r\n\r\n  return storeCreator(rootReducer, data);\r\n};\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport LandingPage from \"./containers/LandingPage\";\r\nimport Home from \"./containers/Home\";\r\nimport createStore from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = createStore(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={this.store}>\r\n        <div className=\"App\">\r\n          <Router>\r\n              <Switch>\r\n                <Route path=\"/LandingPage\">\r\n                  <LandingPage />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n          </Router>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { 500: \"#1976d2\" },\r\n    textPrimary: { 500: \"#404040\" },\r\n    text: {\r\n      primary: \"#283747\",\r\n    },\r\n    secondary: {\r\n      main: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}